{"remainingRequest":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\src\\common\\api.service.js","dependencies":[{"path":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\src\\common\\api.service.js","mtime":1580830226845},{"path":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxVc2Vyc1xcUGFyaWRlXFxPbmVEcml2ZSAtIFBvbGl0ZWNuaWNvIGRpIE1pbGFub1xccHJvZ2V0dG9cXFByb2dldHRvIEZpbmFsZVxcRXZlbnRCdWRkeVxcZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLyB1c2UgZmV0Y2ggdG8gbWFrZSBjYWxsIHRvIG91ciBSRVNUIEFQSSAKLy8gY291bGQgYWxzbyB1c2UgYXhpb3MgbnBtIHBhY2thZ2UKaW1wb3J0IHsgQ1NSRl9UT0tFTiB9IGZyb20gIi4vY3NyZl90b2tlbi5qcyI7CgpmdW5jdGlvbiBnZXRKU09OKF94KSB7CiAgcmV0dXJuIF9nZXRKU09OLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0gLy9nZW5lcmljIGNvZGUgZm9yIGFsbCB0aGUgZGlmZmVyZW50IHJlcXVlc3QgdG8gb3VyIEFQSSAKCgpmdW5jdGlvbiBfZ2V0SlNPTigpIHsKICBfZ2V0SlNPTiA9IF9hc3luY1RvR2VuZXJhdG9yKAogIC8qI19fUFVSRV9fKi8KICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHJlc3BvbnNlKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGlmICghKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjA0KSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCAnJyk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZS5qc29uKCkpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CiAgcmV0dXJuIF9nZXRKU09OLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIGFwaVNlcnZpY2UoZW5kcG9pbnQsIG1ldGhvZCwgZGF0YSkgewogIHZhciBjb25maWcgPSB7CiAgICBtZXRob2Q6IG1ldGhvZCB8fCAiR0VUIiwKICAgIC8vbWV0aG9kID0gbWV0aG9kKGlmIGV4aXN0KSBPUiBtZXRob2QgPSBHRVQKICAgIGJvZHk6IGRhdGEgIT09IHVuZGVmaW5lZCA/IEpTT04uc3RyaW5naWZ5KGRhdGEpIDogbnVsbCwKICAgIC8vIGlmIGRhdGEgIT09IHVuZGVmIHRoZW4gYm9keT1KU09OLi4gZWxzZSBib2R5Om51bGwKICAgIGhlYWRlcnM6IHsKICAgICAgLy9nZW5lcmljIGhlYWRlcnMgb2YgYSByZXF1ZXN0CiAgICAgICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgIC8vZXhlcHQgaW1nCiAgICAgICdYLUNTUkZUb2tlbic6IENTUkZfVE9LRU4KICAgIH0KICB9OwogIHJldHVybiBmZXRjaChlbmRwb2ludCwgY29uZmlnKSAvL3VzZSBmZXRjaCAoZ2VuZXJpYyByZXF1ZXN0IEhUVFApCiAgLnRoZW4oZ2V0SlNPTikuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICByZXR1cm4gY29uc29sZS5sb2coZXJyb3IpOwogIH0pOwp9CgpleHBvcnQgeyBhcGlTZXJ2aWNlIH07"},{"version":3,"sources":["C:/Users/Paride/OneDrive - Politecnico di Milano/progetto/Progetto Finale/EventBuddy/frontend/src/common/api.service.js"],"names":["CSRF_TOKEN","getJSON","response","status","json","apiService","endpoint","method","data","config","body","undefined","JSON","stringify","headers","fetch","then","catch","error","console","log"],"mappings":";;;AAAA;AACA;AACA,SAASA,UAAT,QAA2B,iBAA3B;;SAEeC,O;;EAIf;;;;;;0BAJA,iBAAuBC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQA,QAAQ,CAACC,MAAT,KAAoB,GAD5B;AAAA;AAAA;AAAA;;AAAA,6CACwC,EADxC;;AAAA;AAAA,6CAEWD,QAAQ,CAACE,IAAT,EAFX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKA,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4C;AACxC,MAAMC,MAAM,GAAG;AACXF,IAAAA,MAAM,EAAEA,MAAM,IAAI,KADP;AACc;AACzBG,IAAAA,IAAI,EAAEF,IAAI,KAAKG,SAAT,GAAqBC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAArB,GAA4C,IAFvC;AAE6C;AACxDM,IAAAA,OAAO,EAAE;AAAG;AACR,sBAAgB,kBADX;AACgC;AACrC,qBAAed;AAFV;AAHE,GAAf;AAQA,SAAOe,KAAK,CAACT,QAAD,EAAWG,MAAX,CAAL,CAA6B;AAA7B,GACEO,IADF,CACOf,OADP,EAEEgB,KAFF,CAEQ,UAAAC,KAAK;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,GAFb,CAAP;AAGH;;AAED,SAASb,UAAT","sourcesContent":["// use fetch to make call to our REST API \n// could also use axios npm package\nimport { CSRF_TOKEN } from \"./csrf_token.js\"\n\nasync function getJSON(response) {\n    if (response.status === 204) return ''; // example when delete a resource\n    return response.json();\n}\n//generic code for all the different request to our API \nfunction apiService(endpoint, method, data) {\n    const config = {\n        method: method || \"GET\", //method = method(if exist) OR method = GET\n        body: data !== undefined ? JSON.stringify(data) : null, // if data !== undef then body=JSON.. else body:null\n        headers: {  //generic headers of a request\n            'content-type': 'application/json',  //exept img\n            'X-CSRFToken': CSRF_TOKEN \n        }\n    }\n    return fetch(endpoint, config)      //use fetch (generic request HTTP)\n            .then(getJSON)\n            .catch(error => console.log(error))\n}\n\nexport { apiService };\n"]}]}