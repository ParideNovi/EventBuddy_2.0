{"remainingRequest":"D:\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Progetto Finale\\EventBuddy\\frontend\\src\\common\\api.service.js","dependencies":[{"path":"D:\\Progetto Finale\\EventBuddy\\frontend\\src\\common\\api.service.js","mtime":1581788768000},{"path":"D:\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6XFxQcm9nZXR0byBGaW5hbGVcXEV2ZW50QnVkZHlcXGZyb250ZW5kXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKLy8gdXNlIGZldGNoIHRvIG1ha2UgY2FsbCB0byBvdXIgUkVTVCBBUEkKLy8gY291bGQgYWxzbyB1c2UgYXhpb3MgbnBtIHBhY2thZ2UKaW1wb3J0IHsgQ1NSRl9UT0tFTiB9IGZyb20gIi4vY3NyZl90b2tlbi5qcyI7CgpmdW5jdGlvbiBnZXRKU09OKF94KSB7CiAgcmV0dXJuIF9nZXRKU09OLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0gLy9nZW5lcmljIGNvZGUgZm9yIGFsbCB0aGUgZGlmZmVyZW50IHJlcXVlc3QgdG8gb3VyIEFQSQoKCmZ1bmN0aW9uIF9nZXRKU09OKCkgewogIF9nZXRKU09OID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgLyojX19QVVJFX18qLwogIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUocmVzcG9uc2UpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgaWYgKCEocmVzcG9uc2Uuc3RhdHVzID09PSAyMDQpKSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsICIiKTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlLmpzb24oKSk7CgogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKICByZXR1cm4gX2dldEpTT04uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gYXBpU2VydmljZShlbmRwb2ludCwgbWV0aG9kLCBkYXRhKSB7CiAgdmFyIGNvbmZpZyA9IHsKICAgIG1ldGhvZDogbWV0aG9kIHx8ICJHRVQiLAogICAgLy9tZXRob2QgPSBtZXRob2QoaWYgZXhpc3QpIE9SIG1ldGhvZCA9IEdFVAogICAgYm9keTogZGF0YSAhPT0gdW5kZWZpbmVkID8gSlNPTi5zdHJpbmdpZnkoZGF0YSkgOiBudWxsLAogICAgLy8gaWYgZGF0YSAhPT0gdW5kZWYgdGhlbiBib2R5PUpTT04uLiBlbHNlIGJvZHk6bnVsbAogICAgaGVhZGVyczogewogICAgICAvL2dlbmVyaWMgaGVhZGVycyBvZiBhIHJlcXVlc3QKICAgICAgImNvbnRlbnQtdHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgLy9leGVwdCBpbWcKICAgICAgIlgtQ1NSRlRva2VuIjogQ1NSRl9UT0tFTgogICAgfQogIH07CiAgcmV0dXJuIGZldGNoKGVuZHBvaW50LCBjb25maWcpIC8vdXNlIGZldGNoIChnZW5lcmljIHJlcXVlc3QgSFRUUCkKICAudGhlbihnZXRKU09OKS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgIHJldHVybiBjb25zb2xlLmxvZyhlcnJvcik7CiAgfSk7Cn0KCmV4cG9ydCB7IGFwaVNlcnZpY2UgfTs="},{"version":3,"sources":["D:/Progetto Finale/EventBuddy/frontend/src/common/api.service.js"],"names":["CSRF_TOKEN","getJSON","response","status","json","apiService","endpoint","method","data","config","body","undefined","JSON","stringify","headers","fetch","then","catch","error","console","log"],"mappings":";;;AAAA;AACA;AACA,SAASA,UAAT,QAA2B,iBAA3B;;SAEeC,O;;EAIf;;;;;;0BAJA,iBAAuBC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,kBACMA,QAAQ,CAACC,MAAT,KAAoB,GAD1B;AAAA;AAAA;AAAA;;AAAA,6CACsC,EADtC;;AAAA;AAAA,6CAESD,QAAQ,CAACE,IAAT,EAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKA,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4C;AAC1C,MAAMC,MAAM,GAAG;AACbF,IAAAA,MAAM,EAAEA,MAAM,IAAI,KADL;AACY;AACzBG,IAAAA,IAAI,EAAEF,IAAI,KAAKG,SAAT,GAAqBC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAArB,GAA4C,IAFrC;AAE2C;AACxDM,IAAAA,OAAO,EAAE;AACP;AACA,sBAAgB,kBAFT;AAE6B;AACpC,qBAAed;AAHR;AAHI,GAAf;AASA,SAAOe,KAAK,CAACT,QAAD,EAAWG,MAAX,CAAL,CAAwB;AAAxB,GACJO,IADI,CACCf,OADD,EAEJgB,KAFI,CAEE,UAAAC,KAAK;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,GAFP,CAAP;AAGD;;AAED,SAASb,UAAT","sourcesContent":["// use fetch to make call to our REST API\n// could also use axios npm package\nimport { CSRF_TOKEN } from \"./csrf_token.js\";\n\nasync function getJSON(response) {\n  if (response.status === 204) return \"\"; // example when delete a resource\n  return response.json();\n}\n//generic code for all the different request to our API\nfunction apiService(endpoint, method, data) {\n  const config = {\n    method: method || \"GET\", //method = method(if exist) OR method = GET\n    body: data !== undefined ? JSON.stringify(data) : null, // if data !== undef then body=JSON.. else body:null\n    headers: {\n      //generic headers of a request\n      \"content-type\": \"application/json\", //exept img\n      \"X-CSRFToken\": CSRF_TOKEN\n    }\n  };\n  return fetch(endpoint, config) //use fetch (generic request HTTP)\n    .then(getJSON)\n    .catch(error => console.log(error));\n}\n\nexport { apiService };\n"]}]}