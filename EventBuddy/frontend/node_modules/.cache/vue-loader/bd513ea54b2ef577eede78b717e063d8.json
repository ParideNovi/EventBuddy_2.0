{"remainingRequest":"Z:\\EventBuddy-master\\EventBuddy\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!Z:\\EventBuddy-master\\EventBuddy\\frontend\\src\\components\\ReviewEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"Z:\\EventBuddy-master\\EventBuddy\\frontend\\src\\components\\ReviewEditor.vue","mtime":1581788768000},{"path":"Z:\\EventBuddy-master\\EventBuddy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"Z:\\EventBuddy-master\\EventBuddy\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"Z:\\EventBuddy-master\\EventBuddy\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"Z:\\EventBuddy-master\\EventBuddy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"Z:\\EventBuddy-master\\EventBuddy\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGFwaVNlcnZpY2UgfSBmcm9tICIuLi9jb21tb24vYXBpLnNlcnZpY2UiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJSZXZpZXdFZGl0b3IiLAoKICBwcm9wczogewogICAgaWQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIGV2ZW50U2x1ZzogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgLy8gZmllbGRzIGF1dG9maWxsZWQgYmVmb3JlUm91dGVFbnRlcgogICAgcHJldmlvdXNSZXZpZXdCb2R5OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBwcmV2aW91c1Jldmlld1JhdGluZzogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9CiAgfSwKCiAgYXN5bmMgYmVmb3JlUm91dGVFbnRlcih0bywgZnJvbSwgbmV4dCkgewogICAgLy8gZ2V0IHByZXZpb3VzUmV2aWV3Qm9keSgke3RvLnBhcmFtcy5pZH0pCiAgICAvLyBpdCBjb3VsZCBiZSBhbHNvIG1hZGUgd2l0aCBtZXRob2QgKyBjcmVhdGVkIChsaWZlIGN5Y2xlIGhvb2spCiAgICAvLyBidXQgdGhpcyB3b3JrcyBiZXR0ZXIgd2l0aCBoZWF2eSBmaWxlcyAoaW1hZ2VzKQogICAgbGV0IGVuZHBvaW50ID0gYC9hcGkvcmV2aWV3cy8ke3RvLnBhcmFtcy5pZH0vYDsKICAgIGF3YWl0IGFwaVNlcnZpY2UoZW5kcG9pbnQpLnRoZW4oZGF0YSA9PiB7CiAgICAgIC8vIGdldCBhbGwgdGhlIHByZXZpb3VzRGF0YQogICAgICB0by5wYXJhbXMucHJldmlvdXNSZXZpZXdCb2R5ID0gZGF0YS5ib2R5OwogICAgICB0by5wYXJhbXMucHJldmlvdXNSZXZpZXdSYXRpbmcgPSBkYXRhLnJhdGluZzsKICAgICAgdG8ucGFyYW1zLmV2ZW50U2x1ZyA9IGRhdGEuZXZlbnRfc2x1ZzsKICAgIH0pOwogICAgcmV0dXJuIG5leHQoKTsKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcmV2aWV3Qm9keTogdGhpcy5wcmV2aW91c1Jldmlld0JvZHksIC8vcmV0dXJuIHRoZSBtb2RpZmllZCByZXZpZXcKICAgICAgcmV2aWV3UmF0aW5nOiB0aGlzLnByZXZpb3VzUmV2aWV3UmF0aW5nLAogICAgICBlcnJvcjogbnVsbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uU3VibWl0KCkgewogICAgICAvLyBpZiB0aGUgZmllbGQgY29udGFpbnMgc29tZXRoaW5nCiAgICAgIGlmICh0aGlzLnJldmlld0JvZHkpIHsKICAgICAgICBsZXQgZW5kcG9pbnQgPSBgL2FwaS9yZXZpZXdzLyR7dGhpcy5pZH0vYDsKICAgICAgICBhcGlTZXJ2aWNlKGVuZHBvaW50LCAiUFVUIiwgewogICAgICAgICAgYm9keTogdGhpcy5yZXZpZXdCb2R5LAogICAgICAgICAgcmF0aW5nOiB0aGlzLnJldmlld1JhdGluZwogICAgICAgIH0pLnRoZW4oKCkgPT4gewogICAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgICAgICBuYW1lOiAiZXZlbnQiLAogICAgICAgICAgICBwYXJhbXM6IHsgc2x1ZzogdGhpcy5ldmVudFNsdWcgfQogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5lcnJvciA9ICJJbCBjYW1wbyBSZWNlbnNpb25lIG5vbiBwdcOyIGVzc2VyZSB2dW90byEiOwogICAgICB9CiAgICB9CiAgfQogIC8vIG1ldGhvZHM6IHsKICAvLyAgICAgYXN5bmMgZ2V0UmV2aWV3RGF0YSgpIHsKICAvLyAgICAgICAgIGxldCBlbmRwb2ludCA9IGAvYXBpL3Jldmlld3MvJHt0aGlzLmlkfS9gOwogIC8vICAgICAgICAgYXdhaXQgYXBpU2VydmljZShlbmRwb2ludCkKICAvLyAgICAgICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiB7CiAgLy8gICAgICAgICAgICAgICAgICAgICB0aGlzLnJldmlld0JvZHkgPSBkYXRhLmJvZHk7CiAgLy8gICAgICAgICAgICAgICAgIH0pCiAgLy8gICAgIH0KICAvLyB9LAogIC8vIGNyZWF0ZWQoKSB7CiAgLy8gICAgIHRoaXMuZ2V0UmV2aWV3RGF0YSgpOwogIC8vIH0KfTsK"},{"version":3,"sources":["ReviewEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ReviewEditor.vue","sourceRoot":"src/components","sourcesContent":["<!------------------ Single Review: Modify form ----------------------------->\n<!------------------ methods: beforeRouteEnter data(), onSubmit()----------->\n\n<template lang=\"html\">\n  <div class=\"container mt-2\">\n    <div class=\"row\">\n      <div class=\"col-12\">\n        <h1 class=\"mb-3\">Modifica la tua recensione</h1>\n        <form @submit.prevent=\"onSubmit\">\n          <!--textarea with previous Review-->\n          <textarea v-model=\"reviewBody\" class=\"form-control\" rows=\"3\">\n          </textarea>\n          <!--rating-->\n          <br />\n          <button class=\"btn btn-success\" type=\"submit\">\n            Pubblica la Recensione\n          </button>\n        </form>\n        <p class=\"error mt-2\">{{ error }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { apiService } from \"../common/api.service\";\n\nexport default {\n  name: \"ReviewEditor\",\n\n  props: {\n    id: {\n      type: Number,\n      required: true\n    },\n    eventSlug: {\n      type: String,\n      required: true\n    },\n    // fields autofilled beforeRouteEnter\n    previousReviewBody: {\n      type: String,\n      required: true\n    },\n    previousReviewRating: {\n      type: Number,\n      required: true\n    }\n  },\n\n  async beforeRouteEnter(to, from, next) {\n    // get previousReviewBody(${to.params.id})\n    // it could be also made with method + created (life cycle hook)\n    // but this works better with heavy files (images)\n    let endpoint = `/api/reviews/${to.params.id}/`;\n    await apiService(endpoint).then(data => {\n      // get all the previousData\n      to.params.previousReviewBody = data.body;\n      to.params.previousReviewRating = data.rating;\n      to.params.eventSlug = data.event_slug;\n    });\n    return next();\n  },\n\n  data() {\n    return {\n      reviewBody: this.previousReviewBody, //return the modified review\n      reviewRating: this.previousReviewRating,\n      error: null\n    };\n  },\n  methods: {\n    onSubmit() {\n      // if the field contains something\n      if (this.reviewBody) {\n        let endpoint = `/api/reviews/${this.id}/`;\n        apiService(endpoint, \"PUT\", {\n          body: this.reviewBody,\n          rating: this.reviewRating\n        }).then(() => {\n          this.$router.push({\n            name: \"event\",\n            params: { slug: this.eventSlug }\n          });\n        });\n      } else {\n        this.error = \"Il campo Recensione non puÃ² essere vuoto!\";\n      }\n    }\n  }\n  // methods: {\n  //     async getReviewData() {\n  //         let endpoint = `/api/reviews/${this.id}/`;\n  //         await apiService(endpoint)\n  //                 .then(data => {\n  //                     this.reviewBody = data.body;\n  //                 })\n  //     }\n  // },\n  // created() {\n  //     this.getReviewData();\n  // }\n};\n</script>\n"]}]}