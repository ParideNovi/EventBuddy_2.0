{"remainingRequest":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\src\\views\\Event.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\src\\views\\Event.vue","mtime":1581547309186},{"path":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5yZXZpZXctYWRkZWQgewogIGNvbG9yOiByZWQ7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KLnJhdGluZyB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBoZWlnaHQ6IDUwcHg7CiAgbGluZS1oZWlnaHQ6IDUwcHg7CiAgZm9udC1zaXplOiA1MHB4Owp9CgoucmF0aW5nIGxhYmVsIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAwOwogIGxlZnQ6IDA7CiAgaGVpZ2h0OiAxMDAlOwogIGN1cnNvcjogcG9pbnRlcjsKfQoKLnJhdGluZyBsYWJlbDpsYXN0LWNoaWxkIHsKICBwb3NpdGlvbjogc3RhdGljOwp9CgoucmF0aW5nIGxhYmVsOm50aC1jaGlsZCgxKSB7CiAgei1pbmRleDogNTsKfQoKLnJhdGluZyBsYWJlbDpudGgtY2hpbGQoMikgewogIHotaW5kZXg6IDQ7Cn0KCi5yYXRpbmcgbGFiZWw6bnRoLWNoaWxkKDMpIHsKICB6LWluZGV4OiAzOwp9CgoucmF0aW5nIGxhYmVsOm50aC1jaGlsZCg0KSB7CiAgei1pbmRleDogMjsKfQoKLnJhdGluZyBsYWJlbDpudGgtY2hpbGQoNSkgewogIHotaW5kZXg6IDE7Cn0KCi5yYXRpbmcgbGFiZWwgaW5wdXQgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDA7CiAgbGVmdDogMDsKICBvcGFjaXR5OiAwOwp9CgoucmF0aW5nIGxhYmVsIC5pY29uIHsKICBmbG9hdDogbGVmdDsKICBjb2xvcjogdHJhbnNwYXJlbnQ7Cn0KCi5yYXRpbmcgbGFiZWw6bGFzdC1jaGlsZCAuaWNvbiB7CiAgY29sb3I6ICMwMDA7Cn0KCi5yYXRpbmc6bm90KDpob3ZlcikgbGFiZWwgaW5wdXQ6Y2hlY2tlZCB+IC5pY29uLAoucmF0aW5nOmhvdmVyIGxhYmVsOmhvdmVyIGlucHV0IH4gLmljb24gewogIGNvbG9yOiAjMDlmOwp9CgoucmF0aW5nIGxhYmVsIGlucHV0OmZvY3VzOm5vdCg6Y2hlY2tlZCkgfiAuaWNvbjpsYXN0LWNoaWxkIHsKICBjb2xvcjogIzAwMDsKICB0ZXh0LXNoYWRvdzogMCAwIDVweCAjMDlmOwp9Cg=="},{"version":3,"sources":["Event.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Event.vue","sourceRoot":"src/views","sourcesContent":["<!--Single Event component/event details page \"api/event/:slug\", \nReviews: v-for ReviewComponent\nif it is expired then it is possible to add a review -->\n<template>\n  <div class=\"single-event mt-2\">\n    <div class=\"container\">\n      <!-------------------------------Event details-------------------------------------->\n      <!--######<p> {{ event.image }}</p>-->\n      <h1>{{ event.title }}</h1>\n      <!-- EventActions component in the template-->\n      <EventActions\n        v-if=\"isOwner\"\n        :slug=\"slug\"\n      />\n      <span>{{ moment(event.start_date).format(\"dddd DD MMMM, h:mm:ss a\") }}</span>\n      <p class=\"mb-0\">Evento aggiunta da:\n        <!--######call user details link if not expired -->\n        <span class=\"author-name\">{{ event.author }}</span>\n      </p>\n      <hr>\n\n      <!-- <div class=\"reviews-list-if-event-expired> -->\n\n      <!--check field if Event.userHasReviewed, \n      else showForm to insert a Review  -->\n      <template v-if=\"userHasReviewed\">\n        <p class=\"review-added\"> Hai recensito questo Evento. </p>\n      </template>\n      <template v-else-if=\"showForm\">\n        <form\n          class=\"card\"\n          @submit.prevent=\"onSubmit\"\n        >\n          <div class=\"card-header px-3\">Aggiungi la tua recensione dell'evento</div>\n          <div class=\"card-block\">\n            <textarea\n              v-model=\"newReviewBody\"\n              rows=\"5\"\n              class=\"form-control\"\n              placeholder=\"Recensione..\"\n            > </textarea>\n\n            <!--rating stars input (component)-->\n            <!------------------------->\n            <form class=\"rating\">\n              <label>\n                <input\n                  v-model=\"newReviewRating\"\n                  type=\"radio\"\n                  name=\"stars\"\n                  value=\"1\"\n                />\n                <span class=\"icon\">★</span>\n              </label>\n              <label>\n                <input\n                  v-model=\"newReviewRating\"\n                  type=\"radio\"\n                  name=\"stars\"\n                  value=\"2\"\n                />\n                <span class=\"icon\">★</span>\n                <span class=\"icon\">★</span>\n              </label>\n              <label>\n                <input\n                  v-model=\"newReviewRating\"\n                  type=\"radio\"\n                  name=\"stars\"\n                  value=\"3\"\n                />\n                <span class=\"icon\">★</span>\n                <span class=\"icon\">★</span>\n                <span class=\"icon\">★</span>\n              </label>\n              <label>\n                <input\n                  v-model=\"newReviewRating\"\n                  type=\"radio\"\n                  name=\"stars\"\n                  value=\"4\"\n                />\n                <span class=\"icon\">★</span>\n                <span class=\"icon\">★</span>\n                <span class=\"icon\">★</span>\n                <span class=\"icon\">★</span>\n              </label>\n              <label>\n                <input\n                  v-model=\"newReviewRating\"\n                  type=\"radio\"\n                  name=\"stars\"\n                  value=\"5\"\n                />\n                <span class=\"icon\">★</span>\n                <span class=\"icon\">★</span>\n                <span class=\"icon\">★</span>\n                <span class=\"icon\">★</span>\n                <span class=\"icon\">★</span>\n              </label>\n            </form>\n\n          </div>\n          <div class=\"card-footer px-3\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-sm btn-success\"\n            > Inserisci la tua recensione\n            </button>\n          </div>\n        </form>\n        <p class=\"error mt-2\">{{error}}</p>\n      </template>\n      <template v-else>\n        <button\n          class=\"btn btn-sm btn-success\"\n          @click=\"showForm=true\"\n        >\n          Inserisci la tua recensione </button>\n      </template>\n\n      <!--Create a List of ReviewComponent and fill them with getEventReviews()-->\n      <!--@delete-review=\"deleteReview\" is triggered back from Answercomponent -->\n      <ReviewComponent\n        v-for=\"(review, index) in reviews\"\n        :requestUser=\"requestUser\"\n        :review=\"review\"\n        :key=\"index\"\n        @delete-review=\"deleteReview\"\n      />\n      <div class=\"my-4\">\n        <p v-show=\"loadingReviews\">loading...</p>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport { apiService } from \"../common/api.service\";\nimport moment from \"moment\";\nimport ReviewComponent from \"../components/Review.vue\";\nimport EventActions from \"../components/EventActions.vue\"; //to Edit/Delete Events\n\nexport default {\n  name: \"Event\",\n\n  props: {\n    // used in this component\n    //to get the right Event we need his slug\n    slug: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    //used in this component\n    ReviewComponent,\n    EventActions\n  },\n  data() {\n    return {\n      event: {},\n      loadingReviews: false,\n      reviews: [],\n      userHasReviewed: false,\n      showForm: false, //if userHas Not Reviewed then showForm\n      newReviewBody: null,\n      newReviewRating: null,\n      error: null,\n      next: null,\n      requestUser: null\n    };\n  },\n\n  computed: {\n    isOwner() {\n      return this.event.author === this.requestUser;\n    }\n  },\n\n  methods: {\n    //Events/slug/\n    getEventData() {\n      let endpoint = `/api/events/${this.slug}/`; //endpoint\n      apiService(endpoint).then(data => {\n        this.event = data;\n        this.userHasReviewed = data.user_has_reviewed;\n        this.setPageTitle(data.title);\n      });\n    },\n\n    getEventReviews() {\n      //reviews made about the event\n      let endpoint = `/api/events/${this.slug}/reviews/`;\n      //if (this.next) {                loadMoreReview part is commented\n      //  endpoint = this.next;         loadMoreReview part is commented\n      //}\n      this.loadingReviews = true;\n      apiService(endpoint).then(data => {\n        this.reviews = data.results; //.push(...data.results);  loadMoreReview part is commented\n        this.loadingReviews = false;\n        //if (data.next) {                                      loadMoreReview part is commented\n        //  this.next = data.next;\n        //} else {\n        //  this.next = null;\n        // }\n      });\n    },\n\n    onSubmit() {\n      //check fields\n      if (!this.newReviewBody) {\n        this.error = \"Il campo recensione non può essere vuoto!\";\n      } else if (!this.newReviewRating) {\n        this.error = \"Il campo punteggio non può essere vuoto!\";\n      } else {\n        //POST endpoint\n        let endpoint = `/api/events/${this.slug}/review/`;\n        let method = \"POST\";\n        //call the service for the request and then..\n        apiService(endpoint, method, {\n          body: this.newReviewBody,\n          rating: this.newReviewRating\n        }).then(data => {\n          //add my review\n          this.reviews.unshift(data);\n        });\n        //initialize attributes\n        if (this.error) {\n          this.error = null;\n        }\n        this.newReviewBody = null;\n        this.showForm = false;\n        this.userHasReviewed = true;\n      }\n    },\n    async deleteReview(review) {\n      //DELETE triggered from the Review component botton\n      let endpoint = `/api/reviews/${review.id}/`;\n      try {\n        await apiService(endpoint, \"DELETE\"); //connetcting to the API, delete from DB\n        this.$delete(this.reviews, this.reviews.indexOf(review)); // delete from the array and update\n        this.userHasReviewed = false;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    //to output the event_date in the right format, with filters\n    moment: function(date) {\n      return moment(date).locale(\"it\");\n    },\n    setPageTitle(title) {\n      document.title = title;\n    },\n    setRequestUser() {\n      this.requestUser = window.localStorage.getItem(\"username\");\n    }\n  },\n\n  //no methods\n  created() {\n    this.getEventData();\n    this.getEventReviews();\n    this.setRequestUser();\n  }\n};\n</script>\n\n<style lang=\"css\">\n.review-added {\n  color: red;\n  font-weight: bold;\n}\n.rating {\n  display: inline-block;\n  position: relative;\n  height: 50px;\n  line-height: 50px;\n  font-size: 50px;\n}\n\n.rating label {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  cursor: pointer;\n}\n\n.rating label:last-child {\n  position: static;\n}\n\n.rating label:nth-child(1) {\n  z-index: 5;\n}\n\n.rating label:nth-child(2) {\n  z-index: 4;\n}\n\n.rating label:nth-child(3) {\n  z-index: 3;\n}\n\n.rating label:nth-child(4) {\n  z-index: 2;\n}\n\n.rating label:nth-child(5) {\n  z-index: 1;\n}\n\n.rating label input {\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n}\n\n.rating label .icon {\n  float: left;\n  color: transparent;\n}\n\n.rating label:last-child .icon {\n  color: #000;\n}\n\n.rating:not(:hover) label input:checked ~ .icon,\n.rating:hover label:hover input ~ .icon {\n  color: #09f;\n}\n\n.rating label input:focus:not(:checked) ~ .icon:last-child {\n  color: #000;\n  text-shadow: 0 0 5px #09f;\n}\n</style>\n"]}]}