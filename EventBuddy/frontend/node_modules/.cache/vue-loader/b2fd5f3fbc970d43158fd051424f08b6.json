{"remainingRequest":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\src\\views\\Profile.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\src\\views\\Profile.vue","mtime":1581250731593},{"path":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Paride\\OneDrive - Politecnico di Milano\\progetto\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5wcm9maWxlLWJpbyB7DQogIGZvbnQtc3R5bGU6IGl0YWxpYzsNCn0NCi5hdmF0YXItY29udGFpbmVyIHsNCiAgd2lkdGg6IDEwMHB4Ow0KICBoZWlnaHQ6IDEwMHB4Ow0KfQ0K"},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Profile.vue","sourceRoot":"src/views","sourcesContent":["<!--Details of the selected Profile, with his Events Reviews-->\r\n<template >\r\n  <div class=\"single-profile mt-2\">\r\n\r\n    <div class=\"container\">\r\n      <!--Picture Profile-->\r\n      <h1>{{ profile.user }}</h1>\r\n      <div class=\"avatar-container\">\r\n        <img\r\n          :src=\"profile.avatar\"\r\n          class=\"rounded-circle img-thumbnail .float-left \"\r\n          style=\"\"\r\n          alt=\"avatar\"\r\n        >\r\n        <span class=\"mb-0\">Biografia utente:\r\n          <span class=\"profile-bio\">{{ profile.bio }}</span>\r\n        </span>\r\n      </div>\r\n\r\n      <p>{{ profile.location }}</p>\r\n      <p>{{ profile.birth_date}}</p>\r\n      <hr>\r\n      <!--all the reviews about the profile-->\r\n      <ReviewComponent\r\n        v-for=\"(review,index) in reviews\"\r\n        :review=\"review\"\r\n        :key=\"index\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n \r\n\r\n<script>\r\nimport { apiService } from \"../common/api.service\";\r\nimport ReviewComponent from \"../components/Review.vue\";\r\n\r\nexport default {\r\n  name: \"Profile\",\r\n\r\n  props: {\r\n    // to set the right userUsername when the component is imported with params\r\n    userUsername: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  components: {\r\n    ReviewComponent\r\n  },\r\n  data() {\r\n    return {\r\n      //username : userUsername as props\r\n      profile: {},\r\n      loadingReviews: false,\r\n      reviews: [],\r\n      //UserHasLiked: false,\r\n      showForm: false,\r\n      error: null,\r\n      next: null,\r\n      requestUser: null\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    //isOwner() {\r\n    //return this.event.author === this.requestUser;\r\n    //}\r\n  },\r\n\r\n  methods: {\r\n    setPageTitle() {\r\n      document.title = this.userUsername;\r\n    },\r\n    //Profiles/user\r\n    getUserData() {\r\n      let endpoint = `/api/profiles/${this.userUsername}/`; //endpoint\r\n      apiService(endpoint).then(data => {\r\n        this.profile = data;\r\n        //this.userHasLiked = data.user_has_reviewed;\r\n      });\r\n    },\r\n    //Event/??/reviews\r\n    getUserEventsReviews() {\r\n      let endpoint = `/api/events/${this.userUsername}/reviews/`;\r\n      this.loadingReviews = true;\r\n      apiService(endpoint).then(data => {\r\n        this.reviews = data.reviews;\r\n        this.loadingReviews = false;\r\n      });\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.setPageTitle();\r\n    this.getUserData();\r\n    this.getUserEventsReviews();\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"css\">\r\n.profile-bio {\r\n  font-style: italic;\r\n}\r\n.avatar-container {\r\n  width: 100px;\r\n  height: 100px;\r\n}\r\n</style>\r\n"]}]}