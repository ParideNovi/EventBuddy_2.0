{"remainingRequest":"D:\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Progetto Finale\\EventBuddy\\frontend\\src\\views\\Event.vue?vue&type=style&index=0&id=55555bd0&scoped=true&lang=css&","dependencies":[{"path":"D:\\Progetto Finale\\EventBuddy\\frontend\\src\\views\\Event.vue","mtime":1581781688000},{"path":"D:\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Progetto Finale\\EventBuddy\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNhcmQgewogIGJvcmRlci10b3A6IG5vbmU7CiAgbWFyZ2luLXRvcDogMHJlbTsKICBtYXJnaW4tYm90dG9tOiAxcmVtOwogIHdpZHRoOiAxMDAlOwogIG1heC13aWR0aDogODByZW07Cn0KLmNhcmQtaGVhZGVyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgcGFkZGluZzogMTAlIGF1dG87Cn0KLmNhcmQgaW1nIHsKICB3aWR0aDogOTAlOwp9Ci5zaW5nbGUtZXZlbnQgewogIG1hcmdpbi1sZWZ0OiA1cmVtOwogIG1hcmdpbi1yaWdodDogNXJlbTsKICBhbGlnbi1jb250ZW50OiBsZWZ0Owp9Ci5hdXRob3ItZzpob3ZlciB7CiAgY29sb3I6IGdvbGQ7Cn0KLnJldmlldy1hZGRlZCB7CiAgY29sb3I6IHJlZDsKICBmb250LXdlaWdodDogYm9sZDsKfQoucHJvZmlsZS1saW5rOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7Cn0K"},{"version":3,"sources":["Event.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Event.vue","sourceRoot":"src/views","sourcesContent":["<!--Single Event: Event details page \"api/event/:slug\", -->\n<!--Review list: List of ReviewComponent if event is expired-->\n<!--Review: Add a Review form  if !Event.userHasReviewed and event is expired -->\n\n<template>\n  <div class=\"single-event\">\n    <div class=\"card \">\n\n      <!-------------------------------Event details------------------------------------>\n      <!--######<p> {{ event.image }}</p>-->\n      <div class=\"card-header\">\n        <h1>{{ event.title }}</h1>\n        <p>\n          <img\n            :src=\"event.picture\"\n            class=\" .float-left \"\n            style=\"\"\n            alt=\"avatar\"\n          >\n        </p>\n\n      </div>\n      <div class=\"card-body\">\n        <div class=\" d-flex flex-column\"> {{ event.description }} </div>\n\n        <span>{{ moment(event.start_date).format(\"[DATA: ] dddd DD MMMM YYYY \") }}</span>\n        <br>\n        <span>{{ moment(event.start_date).format(\"[ORE: ]h:mm:ss a\") }}</span>\n\n        <p class=\"mb-0\">Evento aggiunta da:\n          <!--######call user details link if not expired -->\n          <router-link\n            :to=\"{\n                name: 'user-profile',\n                params:{userUsername:event.author}\n                  }\"\n            class=\"profile-link\"\n          >\n\n            <span class=\"author-g author-name\">{{ event.author }}</span>\n          </router-link>\n        </p>\n        <hr>\n        <!-- EventActions component in the template-->\n        <EventActions\n          v-if=\"isOwner\"\n          :slug=\"slug\"\n        />\n      </div>\n    </div>\n\n    <!----------------------------List of ReviewComponent ---------------------------->\n    <!-- fill the list with getEventReviews()                                       -->\n    <!-- @delete-review=\"deleteReview\" is triggered back from ReviewComponent       -->\n    <ReviewComponent\n      v-for=\"(review, index) in reviews\"\n      :requestUser=\"requestUser\"\n      :review=\"review\"\n      :key=\"index\"\n      @delete-review=\"deleteReview\"\n    />\n    <div class=\"my-4\">\n      <p v-show=\"loadingReviews\">loading...</p>\n    </div>\n\n    <!--if Event.userHasReviewed-->\n    <template v-if=\"userHasReviewed\">\n      <p class=\"review-added\"> Hai recensito questo Evento. </p>\n    </template>\n    <!--else !userHasReviewed, if showForm -->\n    <template v-else-if=\"showForm\">\n      <!--Review form  -->\n      <ReviewForm :slug=\"slug\" />\n    </template>\n    <!--else !userHasReviewed and !showForm  -->\n    <template v-else>\n      <button\n        class=\"btn btn-sm btn-success float-left mb-2\"\n        @click=\"showForm=true\"\n      >\n        Inserisci la tua recensione </button>\n    </template>\n  </div>\n</template>\n\n\n<script>\nimport { apiService } from \"../common/api.service\";\nimport moment from \"moment\";\nimport ReviewComponent from \"../components/Review.vue\";\nimport EventActions from \"../components/EventActions.vue\"; //to Edit/Delete Events\nimport ReviewForm from \"../components/ReviewForm.vue\";\n\nexport default {\n  name: \"Event\",\n\n  props: {\n    // used in this component\n    //to get the right Event we need his slug\n    slug: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    //used in this component\n    ReviewComponent,\n    EventActions,\n    ReviewForm\n  },\n  data() {\n    return {\n      event: {},\n      loadingReviews: false,\n      reviews: [],\n      userHasReviewed: false,\n      showForm: false, //if userHas Not Reviewed then showForm\n      requestUser: null\n    };\n  },\n\n  computed: {\n    isOwner() {\n      return this.event.author === this.requestUser;\n    }\n  },\n\n  methods: {\n    //Events/slug/\n    getEventData() {\n      let endpoint = `/api/events/${this.slug}/`; //endpoint\n      apiService(endpoint).then(data => {\n        this.event = data;\n        this.userHasReviewed = data.user_has_reviewed;\n        this.setPageTitle(data.title);\n      });\n    },\n\n    getEventReviews() {\n      //reviews made about the event\n      let endpoint = `/api/events/${this.slug}/reviews/`;\n      //if (this.next) {                loadMoreReview part is commented\n      //  endpoint = this.next;         loadMoreReview part is commented\n      //}\n      this.loadingReviews = true;\n      apiService(endpoint).then(data => {\n        this.reviews = data.results; //.push(...data.results);  loadMoreReview part is commented\n        this.loadingReviews = false;\n        //if (data.next) {                                      loadMoreReview part is commented\n        //  this.next = data.next;\n        //} else {\n        //  this.next = null;\n        // }\n      });\n    },\n\n    async deleteReview(review) {\n      //DELETE triggered from the Review component botton\n      let endpoint = `/api/reviews/${review.id}/`;\n      try {\n        await apiService(endpoint, \"DELETE\"); //connetcting to the API, delete from DB\n        this.$delete(this.reviews, this.reviews.indexOf(review)); // delete from the array and update\n        this.userHasReviewed = false;\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    //to output the event_date in the right format, with filters\n    moment: function(date) {\n      return moment(date).locale(\"it\");\n    },\n    setPageTitle(title) {\n      document.title = title;\n    },\n    setRequestUser() {\n      this.requestUser = window.localStorage.getItem(\"username\");\n    }\n  },\n\n  //no methods\n  created() {\n    this.getEventData();\n    this.getEventReviews();\n    this.setRequestUser();\n  }\n};\n</script>\n\n<style scoped>\n.card {\n  border-top: none;\n  margin-top: 0rem;\n  margin-bottom: 1rem;\n  width: 100%;\n  max-width: 80rem;\n}\n.card-header {\n  text-align: center;\n  padding: 10% auto;\n}\n.card img {\n  width: 90%;\n}\n.single-event {\n  margin-left: 5rem;\n  margin-right: 5rem;\n  align-content: left;\n}\n.author-g:hover {\n  color: gold;\n}\n.review-added {\n  color: red;\n  font-weight: bold;\n}\n.profile-link:hover {\n  text-decoration: none;\n}\n</style>\n"]}]}